package com.example.design_system.theme

import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme

val DarkColorScheme = darkColorScheme(
    primary = primaryDark,
    onPrimary = onPrimaryDark,
    primaryContainer = primaryContainerDark,
    onPrimaryContainer = onPrimaryContainerDark,
    secondary = secondaryDark,
    onSecondary = onSecondaryDark,
    secondaryContainer = secondaryContainerDark,
    onSecondaryContainer = onSecondaryContainerDark,
    tertiary = tertiaryDark,
    onTertiary = onTertiaryDark,
    tertiaryContainer = tertiaryContainerDark,
    onTertiaryContainer = onTertiaryContainerDark,
    error = errorDark,
    onError = onErrorDark,
    errorContainer = errorContainerDark,
    onErrorContainer = onErrorContainerDark,
    background = backgroundDark,
    onBackground = onBackgroundDark,
    surface = surfaceDark,
    onSurface = onSurfaceDark,
    surfaceVariant = surfaceVariantDark,
    onSurfaceVariant = onSurfaceVariantDark,
    outline = outlineDark,
    outlineVariant = outlineVariantDark,
    scrim = scrimDark,
    inverseSurface = inverseSurfaceDark,
    inverseOnSurface = inverseOnSurfaceDark,
    inversePrimary = inversePrimaryDark,
    surfaceDim = surfaceDimDark,
    surfaceBright = surfaceBrightDark,
    surfaceContainerLowest = surfaceContainerLowestDark,
    surfaceContainerLow = surfaceContainerLowDark,
    surfaceContainer = surfaceContainerDark,
    surfaceContainerHigh = surfaceContainerHighDark,
    surfaceContainerHighest = surfaceContainerHighestDark,
)

val LightColorScheme = lightColorScheme(
    primary = primaryLight,
    onPrimary = onPrimaryLight,
    primaryContainer = primaryContainerLight,
    onPrimaryContainer = onPrimaryContainerLight,
    secondary = secondaryLight,
    onSecondary = onSecondaryLight,
    secondaryContainer = secondaryContainerLight,
    onSecondaryContainer = onSecondaryContainerLight,
    tertiary = tertiaryLight,
    onTertiary = onTertiaryLight,
    tertiaryContainer = tertiaryContainerLight,
    onTertiaryContainer = onTertiaryContainerLight,
    error = errorLight,
    onError = onErrorLight,
    errorContainer = errorContainerLight,
    onErrorContainer = onErrorContainerLight,
    background = backgroundLight,
    onBackground = onBackgroundLight,
    surface = surfaceLight,
    onSurface = onSurfaceLight,
    surfaceVariant = surfaceVariantLight,
    onSurfaceVariant = onSurfaceVariantLight,
    outline = outlineLight,
    outlineVariant = outlineVariantLight,
    scrim = scrimLight,
    inverseSurface = inverseSurfaceLight,
    inverseOnSurface = inverseOnSurfaceLight,
    inversePrimary = inversePrimaryLight,
    surfaceDim = surfaceDimLight,
    surfaceBright = surfaceBrightLight,
    surfaceContainerLowest = surfaceContainerLowestLight,
    surfaceContainerLow = surfaceContainerLowLight,
    surfaceContainer = surfaceContainerLight,
    surfaceContainerHigh = surfaceContainerHighLight,
    surfaceContainerHighest = surfaceContainerHighestLight,
)

val LightTacosScheme = lightColorScheme(
    primary = primaryTacosLight,
    onPrimary = onPrimaryTacosLight,
    primaryContainer = primaryContainerTacosLight,
    onPrimaryContainer = onPrimaryContainerTacosLight,
    secondary = secondaryTacosLight,
    onSecondary = onSecondaryTacosLight,
    secondaryContainer = secondaryContainerTacosLight,
    onSecondaryContainer = onSecondaryContainerTacosLight,
    tertiary = tertiaryTacosLight,
    onTertiary = onTertiaryTacosLight,
    tertiaryContainer = tertiaryContainerTacosLight,
    onTertiaryContainer = onTertiaryContainerTacosLight,
    error = errorTacosLight,
    onError = onErrorTacosLight,
    errorContainer = errorContainerTacosLight,
    onErrorContainer = onErrorContainerTacosLight,
    background = backgroundTacosLight,
    onBackground = onBackgroundTacosLight,
    surface = surfaceTacosLight,
    onSurface = onSurfaceTacosLight,
    surfaceVariant = surfaceVariantTacosLight,
    onSurfaceVariant = onSurfaceVariantTacosLight,
    outline = outlineTacosLight,
    outlineVariant = outlineVariantTacosLight,
    scrim = scrimTacosLight,
    inverseSurface = inverseSurfaceTacosLight,
    inverseOnSurface = inverseOnSurfaceTacosLight,
    inversePrimary = inversePrimaryTacosLight,
    surfaceDim = surfaceDimTacosLight,
    surfaceBright = surfaceBrightTacosLight,
    surfaceContainerLowest = surfaceContainerLowestTacosLight,
    surfaceContainerLow = surfaceContainerLowTacosLight,
    surfaceContainer = surfaceContainerTacosLight,
    surfaceContainerHigh = surfaceContainerHighTacosLight,
    surfaceContainerHighest = surfaceContainerHighestTacosLight,
)

val DarkTacosScheme = darkColorScheme(
    primary = primaryTacosDark,
    onPrimary = onPrimaryTacosDark,
    primaryContainer = primaryContainerTacosDark,
    onPrimaryContainer = onPrimaryContainerTacosDark,
    secondary = secondaryTacosDark,
    onSecondary = onSecondaryTacosDark,
    secondaryContainer = secondaryContainerTacosDark,
    onSecondaryContainer = onSecondaryContainerTacosDark,
    tertiary = tertiaryTacosDark,
    onTertiary = onTertiaryTacosDark,
    tertiaryContainer = tertiaryContainerTacosDark,
    onTertiaryContainer = onTertiaryContainerTacosDark,
    error = errorTacosDark,
    onError = onErrorTacosDark,
    errorContainer = errorContainerTacosDark,
    onErrorContainer = onErrorContainerTacosDark,
    background = backgroundTacosDark,
    onBackground = onBackgroundTacosDark,
    surface = surfaceTacosDark,
    onSurface = onSurfaceTacosDark,
    surfaceVariant = surfaceVariantTacosDark,
    onSurfaceVariant = onSurfaceVariantTacosDark,
    outline = outlineTacosDark,
    outlineVariant = outlineVariantTacosDark,
    scrim = scrimTacosDark,
    inverseSurface = inverseSurfaceTacosDark,
    inverseOnSurface = inverseOnSurfaceTacosDark,
    inversePrimary = inversePrimaryTacosDark,
    surfaceDim = surfaceDimTacosDark,
    surfaceBright = surfaceBrightTacosDark,
    surfaceContainerLowest = surfaceContainerLowestTacosDark,
    surfaceContainerLow = surfaceContainerLowTacosDark,
    surfaceContainer = surfaceContainerTacosDark,
    surfaceContainerHigh = surfaceContainerHighTacosDark,
    surfaceContainerHighest = surfaceContainerHighestTacosDark,
)

val LightLavenderScheme = lightColorScheme(
    primary = primaryLavenderLight,
    onPrimary = onPrimaryLavenderLight,
    primaryContainer = primaryContainerLavenderLight,
    onPrimaryContainer = onPrimaryContainerLavenderLight,
    secondary = secondaryLavenderLight,
    onSecondary = onSecondaryLavenderLight,
    secondaryContainer = secondaryContainerLavenderLight,
    onSecondaryContainer = onSecondaryContainerLavenderLight,
    tertiary = tertiaryLavenderLight,
    onTertiary = onTertiaryLavenderLight,
    tertiaryContainer = tertiaryContainerLavenderLight,
    onTertiaryContainer = onTertiaryContainerLavenderLight,
    error = errorLavenderLight,
    onError = onErrorLavenderLight,
    errorContainer = errorContainerLavenderLight,
    onErrorContainer = onErrorContainerLavenderLight,
    background = backgroundLavenderLight,
    onBackground = onBackgroundLavenderLight,
    surface = surfaceLavenderLight,
    onSurface = onSurfaceLavenderLight,
    surfaceVariant = surfaceVariantLavenderLight,
    onSurfaceVariant = onSurfaceVariantLavenderLight,
    outline = outlineLavenderLight,
    outlineVariant = outlineVariantLavenderLight,
    scrim = scrimLavenderLight,
    inverseSurface = inverseSurfaceLavenderLight,
    inverseOnSurface = inverseOnSurfaceLavenderLight,
    inversePrimary = inversePrimaryLavenderLight,
    surfaceDim = surfaceDimLavenderLight,
    surfaceBright = surfaceBrightLavenderLight,
    surfaceContainerLowest = surfaceContainerLowestLavenderLight,
    surfaceContainerLow = surfaceContainerLowLavenderLight,
    surfaceContainer = surfaceContainerLavenderLight,
    surfaceContainerHigh = surfaceContainerHighLavenderLight,
    surfaceContainerHighest = surfaceContainerHighestLavenderLight,
)

val DarkLavenderScheme = darkColorScheme(
    primary = primaryLavenderDark,
    onPrimary = onPrimaryLavenderDark,
    primaryContainer = primaryContainerLavenderDark,
    onPrimaryContainer = onPrimaryContainerLavenderDark,
    secondary = secondaryLavenderDark,
    onSecondary = onSecondaryLavenderDark,
    secondaryContainer = secondaryContainerLavenderDark,
    onSecondaryContainer = onSecondaryContainerLavenderDark,
    tertiary = tertiaryLavenderDark,
    onTertiary = onTertiaryLavenderDark,
    tertiaryContainer = tertiaryContainerLavenderDark,
    onTertiaryContainer = onTertiaryContainerLavenderDark,
    error = errorLavenderDark,
    onError = onErrorLavenderDark,
    errorContainer = errorContainerLavenderDark,
    onErrorContainer = onErrorContainerLavenderDark,
    background = backgroundLavenderDark,
    onBackground = onBackgroundLavenderDark,
    surface = surfaceLavenderDark,
    onSurface = onSurfaceLavenderDark,
    surfaceVariant = surfaceVariantLavenderDark,
    onSurfaceVariant = onSurfaceVariantLavenderDark,
    outline = outlineLavenderDark,
    outlineVariant = outlineVariantLavenderDark,
    scrim = scrimLavenderDark,
    inverseSurface = inverseSurfaceLavenderDark,
    inverseOnSurface = inverseOnSurfaceLavenderDark,
    inversePrimary = inversePrimaryLavenderDark,
    surfaceDim = surfaceDimLavenderDark,
    surfaceBright = surfaceBrightLavenderDark,
    surfaceContainerLowest = surfaceContainerLowestLavenderDark,
    surfaceContainerLow = surfaceContainerLowLavenderDark,
    surfaceContainer = surfaceContainerLavenderDark,
    surfaceContainerHigh = surfaceContainerHighLavenderDark,
    surfaceContainerHighest = surfaceContainerHighestLavenderDark,
)

val LightGreenAppleScheme = lightColorScheme(
    primary = primaryGreenAppleLight,
    onPrimary = onPrimaryGreenAppleLight,
    primaryContainer = primaryContainerGreenAppleLight,
    onPrimaryContainer = onPrimaryContainerGreenAppleLight,
    secondary = secondaryGreenAppleLight,
    onSecondary = onSecondaryGreenAppleLight,
    secondaryContainer = secondaryContainerGreenAppleLight,
    onSecondaryContainer = onSecondaryContainerGreenAppleLight,
    tertiary = tertiaryGreenAppleLight,
    onTertiary = onTertiaryGreenAppleLight,
    tertiaryContainer = tertiaryContainerGreenAppleLight,
    onTertiaryContainer = onTertiaryContainerGreenAppleLight,
    error = errorGreenAppleLight,
    onError = onErrorGreenAppleLight,
    errorContainer = errorContainerGreenAppleLight,
    onErrorContainer = onErrorContainerGreenAppleLight,
    background = backgroundGreenAppleLight,
    onBackground = onBackgroundGreenAppleLight,
    surface = surfaceGreenAppleLight,
    onSurface = onSurfaceGreenAppleLight,
    surfaceVariant = surfaceVariantGreenAppleLight,
    onSurfaceVariant = onSurfaceVariantGreenAppleLight,
    outline = outlineGreenAppleLight,
    outlineVariant = outlineVariantGreenAppleLight,
    scrim = scrimGreenAppleLight,
    inverseSurface = inverseSurfaceGreenAppleLight,
    inverseOnSurface = inverseOnSurfaceGreenAppleLight,
    inversePrimary = inversePrimaryGreenAppleLight,
    surfaceDim = surfaceDimGreenAppleLight,
    surfaceBright = surfaceBrightGreenAppleLight,
    surfaceContainerLowest = surfaceContainerLowestGreenAppleLight,
    surfaceContainerLow = surfaceContainerLowGreenAppleLight,
    surfaceContainer = surfaceContainerGreenAppleLight,
    surfaceContainerHigh = surfaceContainerHighGreenAppleLight,
    surfaceContainerHighest = surfaceContainerHighestGreenAppleLight,
)

val DarkGreenAppleScheme = darkColorScheme(
    primary = primaryGreenAppleDark,
    onPrimary = onPrimaryGreenAppleDark,
    primaryContainer = primaryContainerGreenAppleDark,
    onPrimaryContainer = onPrimaryContainerGreenAppleDark,
    secondary = secondaryGreenAppleDark,
    onSecondary = onSecondaryGreenAppleDark,
    secondaryContainer = secondaryContainerGreenAppleDark,
    onSecondaryContainer = onSecondaryContainerGreenAppleDark,
    tertiary = tertiaryGreenAppleDark,
    onTertiary = onTertiaryGreenAppleDark,
    tertiaryContainer = tertiaryContainerGreenAppleDark,
    onTertiaryContainer = onTertiaryContainerGreenAppleDark,
    error = errorGreenAppleDark,
    onError = onErrorGreenAppleDark,
    errorContainer = errorContainerGreenAppleDark,
    onErrorContainer = onErrorContainerGreenAppleDark,
    background = backgroundGreenAppleDark,
    onBackground = onBackgroundGreenAppleDark,
    surface = surfaceGreenAppleDark,
    onSurface = onSurfaceGreenAppleDark,
    surfaceVariant = surfaceVariantGreenAppleDark,
    onSurfaceVariant = onSurfaceVariantGreenAppleDark,
    outline = outlineGreenAppleDark,
    outlineVariant = outlineVariantGreenAppleDark,
    scrim = scrimGreenAppleDark,
    inverseSurface = inverseSurfaceGreenAppleDark,
    inverseOnSurface = inverseOnSurfaceGreenAppleDark,
    inversePrimary = inversePrimaryGreenAppleDark,
    surfaceDim = surfaceDimGreenAppleDark,
    surfaceBright = surfaceBrightGreenAppleDark,
    surfaceContainerLowest = surfaceContainerLowestGreenAppleDark,
    surfaceContainerLow = surfaceContainerLowGreenAppleDark,
    surfaceContainer = surfaceContainerGreenAppleDark,
    surfaceContainerHigh = surfaceContainerHighGreenAppleDark,
    surfaceContainerHighest = surfaceContainerHighestGreenAppleDark,
)

val LightSakuraScheme = lightColorScheme(
    primary = primarySakuraLight,
    onPrimary = onPrimarySakuraLight,
    primaryContainer = primaryContainerSakuraLight,
    onPrimaryContainer = onPrimaryContainerSakuraLight,
    secondary = secondarySakuraLight,
    onSecondary = onSecondarySakuraLight,
    secondaryContainer = secondaryContainerSakuraLight,
    onSecondaryContainer = onSecondaryContainerSakuraLight,
    tertiary = tertiarySakuraLight,
    onTertiary = onTertiarySakuraLight,
    tertiaryContainer = tertiaryContainerSakuraLight,
    onTertiaryContainer = onTertiaryContainerSakuraLight,
    error = errorSakuraLight,
    onError = onErrorSakuraLight,
    errorContainer = errorContainerSakuraLight,
    onErrorContainer = onErrorContainerSakuraLight,
    background = backgroundSakuraLight,
    onBackground = onBackgroundSakuraLight,
    surface = surfaceSakuraLight,
    onSurface = onSurfaceSakuraLight,
    surfaceVariant = surfaceVariantSakuraLight,
    onSurfaceVariant = onSurfaceVariantSakuraLight,
    outline = outlineSakuraLight,
    outlineVariant = outlineVariantSakuraLight,
    scrim = scrimSakuraLight,
    inverseSurface = inverseSurfaceSakuraLight,
    inverseOnSurface = inverseOnSurfaceSakuraLight,
    inversePrimary = inversePrimarySakuraLight,
    surfaceDim = surfaceDimSakuraLight,
    surfaceBright = surfaceBrightSakuraLight,
    surfaceContainerLowest = surfaceContainerLowestSakuraLight,
    surfaceContainerLow = surfaceContainerLowSakuraLight,
    surfaceContainer = surfaceContainerSakuraLight,
    surfaceContainerHigh = surfaceContainerHighSakuraLight,
    surfaceContainerHighest = surfaceContainerHighestSakuraLight
)

val DarkSakuraScheme = darkColorScheme(
    primary = primarySakuraDark,
    onPrimary = onPrimarySakuraDark,
    primaryContainer = primaryContainerSakuraDark,
    onPrimaryContainer = onPrimaryContainerSakuraDark,
    secondary = secondarySakuraDark,
    onSecondary = onSecondarySakuraDark,
    secondaryContainer = secondaryContainerSakuraDark,
    onSecondaryContainer = onSecondaryContainerSakuraDark,
    tertiary = tertiarySakuraDark,
    onTertiary = onTertiarySakuraDark,
    tertiaryContainer = tertiaryContainerSakuraDark,
    onTertiaryContainer = onTertiaryContainerSakuraDark,
    error = errorSakuraDark,
    onError = onErrorSakuraDark,
    errorContainer = errorContainerSakuraDark,
    onErrorContainer = onErrorContainerSakuraDark,
    background = backgroundSakuraDark,
    onBackground = onBackgroundSakuraDark,
    surface = surfaceSakuraDark,
    onSurface = onSurfaceSakuraDark,
    surfaceVariant = surfaceVariantSakuraDark,
    onSurfaceVariant = onSurfaceVariantSakuraDark,
    outline = outlineSakuraDark,
    outlineVariant = outlineVariantSakuraDark,
    scrim = scrimSakuraDark,
    inverseSurface = inverseSurfaceSakuraDark,
    inverseOnSurface = inverseOnSurfaceSakuraDark,
    inversePrimary = inversePrimarySakuraDark,
    surfaceDim = surfaceDimSakuraDark,
    surfaceBright = surfaceBrightSakuraDark,
    surfaceContainerLowest = surfaceContainerLowestSakuraDark,
    surfaceContainerLow = surfaceContainerLowSakuraDark,
    surfaceContainer = surfaceContainerSakuraDark,
    surfaceContainerHigh = surfaceContainerHighSakuraDark,
    surfaceContainerHighest = surfaceContainerHighestSakuraDark,
)

val LightSeaScheme = lightColorScheme(
    primary = primarySeaLight,
    onPrimary = onPrimarySeaLight,
    primaryContainer = primaryContainerSeaLight,
    onPrimaryContainer = onPrimaryContainerSeaLight,
    secondary = secondarySeaLight,
    onSecondary = onSecondarySeaLight,
    secondaryContainer = secondaryContainerSeaLight,
    onSecondaryContainer = onSecondaryContainerSeaLight,
    tertiary = tertiarySeaLight,
    onTertiary = onTertiarySeaLight,
    tertiaryContainer = tertiaryContainerSeaLight,
    onTertiaryContainer = onTertiaryContainerSeaLight,
    error = errorSeaLight,
    onError = onErrorSeaLight,
    errorContainer = errorContainerSeaLight,
    onErrorContainer = onErrorContainerSeaLight,
    background = backgroundSeaLight,
    onBackground = onBackgroundSeaLight,
    surface = surfaceSeaLight,
    onSurface = onSurfaceSeaLight,
    surfaceVariant = surfaceVariantSeaLight,
    onSurfaceVariant = onSurfaceVariantSeaLight,
    outline = outlineSeaLight,
    outlineVariant = outlineVariantSeaLight,
    scrim = scrimSeaLight,
    inverseSurface = inverseSurfaceSeaLight,
    inverseOnSurface = inverseOnSurfaceSeaLight,
    inversePrimary = inversePrimarySeaLight,
    surfaceDim = surfaceDimSeaLight,
    surfaceBright = surfaceBrightSeaLight,
    surfaceContainerLowest = surfaceContainerLowestSeaLight,
    surfaceContainerLow = surfaceContainerLowSeaLight,
    surfaceContainer = surfaceContainerSeaLight,
    surfaceContainerHigh = surfaceContainerHighSeaLight,
    surfaceContainerHighest = surfaceContainerHighestSeaLight,
)

val DarkSeaScheme = darkColorScheme(
    primary = primarySeaDark,
    onPrimary = onPrimarySeaDark,
    primaryContainer = primaryContainerSeaDark,
    onPrimaryContainer = onPrimaryContainerSeaDark,
    secondary = secondarySeaDark,
    onSecondary = onSecondarySeaDark,
    secondaryContainer = secondaryContainerSeaDark,
    onSecondaryContainer = onSecondaryContainerSeaDark,
    tertiary = tertiarySeaDark,
    onTertiary = onTertiarySeaDark,
    tertiaryContainer = tertiaryContainerSeaDark,
    onTertiaryContainer = onTertiaryContainerSeaDark,
    error = errorSeaDark,
    onError = onErrorSeaDark,
    errorContainer = errorContainerSeaDark,
    onErrorContainer = onErrorContainerSeaDark,
    background = backgroundSeaDark,
    onBackground = onBackgroundSeaDark,
    surface = surfaceSeaDark,
    onSurface = onSurfaceSeaDark,
    surfaceVariant = surfaceVariantSeaDark,
    onSurfaceVariant = onSurfaceVariantSeaDark,
    outline = outlineSeaDark,
    outlineVariant = outlineVariantSeaDark,
    scrim = scrimSeaDark,
    inverseSurface = inverseSurfaceSeaDark,
    inverseOnSurface = inverseOnSurfaceSeaDark,
    inversePrimary = inversePrimarySeaDark,
    surfaceDim = surfaceDimSeaDark,
    surfaceBright = surfaceBrightSeaDark,
    surfaceContainerLowest = surfaceContainerLowestSeaDark,
    surfaceContainerLow = surfaceContainerLowSeaDark,
    surfaceContainer = surfaceContainerSeaDark,
    surfaceContainerHigh = surfaceContainerHighSeaDark,
    surfaceContainerHighest = surfaceContainerHighestSeaDark,
)